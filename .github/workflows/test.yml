# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: test action 42

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
 
permissions:
  contents: read

jobs:
  test:
    
    runs-on: ubuntu-latest
    env:
      Trumpet: Freddy.Hubbard

    steps:
    - name: Checkout sources
      uses: actions/checkout@v3

    - name: Import project variables without overriding
      uses: zlatko-ms/varfiletoenv@main
      with:
        override: false
        paths: |
          ./test/projectvars.properties
          ./test/release.properties
          ./test/override.properties
          ./test/nonexistingfile.properties
        
    - name: Ensure variables are defined from file without overrides 
      run: |

        # Source the assertion shell function
        source ./test/vartestfunction.sh
        
        # Test file injected variables
        assertDefinedAndEqualTo "theCommander" "John Coltrane"
        assertDefinedAndEqualTo "RELEASE" "1.2.3"
        assertDefinedAndEqualTo "myFavorite" "Things"
        
        # Test local variable is not overriden from file
        assertDefinedAndEqualTo "Trumpet" "Freddy.Hubbard"

    - name: Import project variables with overriding
      uses: zlatko-ms/varfiletoenv@main
      with:
        logs: true
        paths: ./test/override.properties

    - name: Ensure variables are overidden from file 
      run: |
        # Source the assertion shell function
        source ./test/vartestfunction.sh

        # Test local file has been overriden with the value from file
        assertDefinedAndEqualTo "Trumpet" "Miles Davis"
      
        